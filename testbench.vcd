$date
	Thu Dec 21 01:44:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! PRWDATA [31:0] $end
$var wire 32 " PRWADDR [31:0] $end
$var wire 1 # PREADY $end
$var wire 32 $ PRDATA1 [31:0] $end
$var wire 1 % PENABLE $end
$var reg 32 & PADDR [31:0] $end
$var reg 1 ' PCLK $end
$var reg 32 ( PDATA [31:0] $end
$var reg 1 ) PRESET $end
$var reg 1 * PSEL $end
$var reg 1 + PWRITE $end
$var reg 1 , transfer $end
$scope module m $end
$var wire 32 - PADDR [31:0] $end
$var wire 1 ' PCLK $end
$var wire 32 . PDATA [31:0] $end
$var wire 1 ) PRESET $end
$var wire 1 * PSEL $end
$var wire 1 + PWRITE $end
$var wire 1 , transfer $end
$var wire 1 # PREADY $end
$var reg 1 % PENABLE $end
$var reg 32 / PRWADDR [31:0] $end
$var reg 32 0 PRWDATA [31:0] $end
$var reg 2 1 state [1:0] $end
$scope task apb_read $end
$var reg 32 2 addr [31:0] $end
$upscope $end
$scope task apb_write $end
$var reg 32 3 addr [31:0] $end
$var reg 32 4 data [31:0] $end
$upscope $end
$upscope $end
$scope module s $end
$var wire 1 ' PCLK $end
$var wire 1 % PENABLE $end
$var wire 1 ) PRESET $end
$var wire 32 5 PRWADDR [31:0] $end
$var wire 32 6 PRWDATA [31:0] $end
$var wire 1 * PSEL $end
$var wire 1 + PWRITE $end
$var reg 32 7 PRDATA1 [31:0] $end
$var reg 1 # PREADY $end
$var reg 32 8 a [31:0] $end
$var reg 32 9 b [31:0] $end
$var reg 2 : flag [1:0] $end
$var reg 4 ; state [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
bx 4
bx 3
bx 2
b0 1
b0 0
b0 /
b111 .
b0 -
1,
1+
0*
1)
b111 (
0'
b0 &
0%
b0 $
0#
b0 "
b0 !
$end
#5
1'
#10
0'
1*
0)
#15
b1 1
1'
#20
0'
#25
1%
1'
#30
0'
#35
b11 1
b111 !
b111 0
b111 6
b111 4
b0 3
1#
1'
#40
0'
#45
b1 1
b111 8
1'
#50
0'
0*
#55
b111 $
b111 7
0#
1'
#60
0'
#65
b111 $
b111 7
1'
#70
0'
1*
b100 &
b100 -
#75
b11 1
b100 "
b100 /
b100 5
b111 $
b111 7
b100 3
1#
1'
#80
0'
#85
b1 1
b111 9
b0 $
b0 7
1'
#90
0'
#95
b11 1
b0 $
b0 7
1'
#100
0'
#105
b1 1
b111 $
b111 7
1'
#110
0'
0*
#115
b0 $
b0 7
0#
1'
#120
0'
#125
1'
#130
0'
1*
b100000000000000000000000000001 (
b100000000000000000000000000001 .
b1000 &
b1000 -
#135
b11 1
b1000 "
b1000 /
b1000 5
b100000000000000000000000000001 !
b100000000000000000000000000001 0
b100000000000000000000000000001 6
b0 $
b0 7
b100000000000000000000000000001 4
b1000 3
1#
1'
#140
0'
#145
b1 1
b1 :
1'
#150
0'
#155
b11 1
b1110 $
b1110 7
1'
#160
0'
0*
#165
b1110 $
b1110 7
0#
1'
#170
0'
#175
b1110 $
b1110 7
1'
#180
0'
1*
b1100 (
b1100 .
b1100 &
b1100 -
#185
b1 1
b1110 $
b1110 7
1#
1'
#190
0'
#195
b11 1
b1100 "
b1100 /
b1100 5
b1100 !
b1100 0
b1100 6
b1110 $
b1110 7
b1100 4
b1100 3
1'
#200
0'
#205
b1 1
b1110 $
b1110 7
1'
#210
0'
0*
#215
b1110 $
b1110 7
0#
1'
#220
0'
#225
b1110 $
b1110 7
1'
#230
0'
